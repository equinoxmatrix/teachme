#!/usr/bin/env bash
echo "This is the git rm command."

# The command's name
echo -e 'git rm'

# the command's description
echo "Much like the command line version of rm, git rm removes a file. With git rm, however, the file is removed from the working tree and the index. This effectively removes the file from both the file system directory as well as git's working tree. The file being removed must be identical to the file in the latest commit, if the file has any changes that haven't been commited the rm will fail. This behaviour can be overridden with the -f (force) flag."

echo "------------"

# the command's syntax
echo “Syntax”
echo "git rm [-f | --cached] <file>"
echo -e "\t-f: The git rm command is designed to remove files both from the working tree and the index. A built in requirement to executing this command is that the file specified must be identical in both locations. The –f flag allows you to remove a file even if the file has been changed in either location.”
echo -e "\t-cached: The cached option allows a file to be removed from the index only.”
#   ...      etc

echo "------------"

# the command's usage examples
# example 1
echo "git test"
echo description here

# example 2
echo "git test something"
echo description here


exit 0
